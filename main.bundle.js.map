{"version":3,"sources":["/Users/ematiu/dev/copay-recovery/src async","/Users/ematiu/dev/copay-recovery/src/app/app.component.html","/Users/ematiu/dev/copay-recovery/src/app/app.component.scss","/Users/ematiu/dev/copay-recovery/src/app/app.component.ts","/Users/ematiu/dev/copay-recovery/src/app/app.module.ts","/Users/ematiu/dev/copay-recovery/src/app/services/recovery.service.ts","/Users/ematiu/dev/copay-recovery/src/environments/environment.ts","/Users/ematiu/dev/copay-recovery/src/main.ts","buffer (ignored)","crypto (ignored)","util (ignored)","util (ignored)?15ab"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ematiu/dev/copay-recovery/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<div class=\\\"header\\\">\\n  <div class=\\\"header-content\\\">\\n    <img class=\\\"bitpay-logo\\\" src=\\\"assets/img/bitpay-logo-negative.svg\\\" alt=\\\"Bitpay\\\">\\n    <div class=\\\"header-center\\\">\\n      <h3 class=\\\"header-title\\\">Recovery Tool v8</h3>\\n      <div class=\\\"repository-link\\\">\\n        <a href=\\\"https://github.com/bitpay/copay-recovery\\\" target=\\\"blank\\\">\\n          <img src=\\\"assets/img/github.png\\\" alt=\\\"Github\\\">\\n        </a>\\n      </div>\\n    </div>\\n    <img class=\\\"copay-logo\\\" src=\\\"assets/img/copay-logo-negative.svg\\\" alt=\\\"Copay\\\">\\n  </div>\\n</div>\\n<div [hidden]=\\\"!showLoadingSpinner\\\" class=\\\"no-clickable-background\\\">\\n  <div class=\\\"loading-message\\\">\\n    <h5>Please wait</h5>\\n    <h5>This process could take several minutes</h5>\\n    <PRE *ngIf=\\\"(reportAddresses || reportAmount || reportInactive) && beforeScan\\\">\\n      <div class=\\\"labels\\\">\\n        Active addresses found:\\n        Total funds found:\\n        Inactive Addresses Streak:\\n      </div>\\n      <div class=\\\"values\\\">\\n        {{reportAddresses}}\\n        {{reportAmount}}\\n        {{reportInactive}}\\n      </div>\\n    </PRE>\\n    <div>\\n      <button type=\\\"button\\\" (click)=\\\"ngOnInit()\\\" class=\\\"btn btn-outline-default btn-lg\\\">Cancel</button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n\\n  <div [hidden]=\\\"!successMessage\\\" class=\\\"alert alert-success\\\">{{successMessage}}</div>\\n  <div [hidden]=\\\"!errorMessage\\\" class=\\\"alert alert-danger\\\">{{errorMessage}}</div>\\n  <div [hidden]=\\\"!statusMessage\\\" class=\\\"alert alert-info\\\">{{statusMessage}}</div>\\n\\n  <form #processInputsForm=\\\"ngForm\\\" (ngSubmit)=\\\"processInputs()\\\" *ngIf=\\\"beforeScan\\\">\\n\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block\\\">\\n        <h4 class=\\\"card-title\\\">WALLET CONFIGURATION</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-xs-12 first-row\\\">\\n            <div class=\\\"form-group signatures\\\">\\n              <label for=\\\"signaturesNumber\\\">Required number of signatures</label>\\n              <select class=\\\"form-control\\\" id=\\\"signaturesNumber\\\" name=\\\"signaturesNumber\\\" [(ngModel)]=\\\"signaturesNumber\\\">\\n                <option *ngFor=\\\"let option of availableOptions\\\" [ngValue]=\\\"option\\\">{{option}}</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group copayers\\\">\\n              <label for=\\\"copayersNumber\\\">Total number of Copayers</label>\\n              <select class=\\\"form-control\\\" id=\\\"copayersNumber\\\" name=\\\"copayersNumber\\\" [(ngModel)]=\\\"copayersNumber\\\" (ngModelChange)=\\\"updateCopayersForm($event)\\\">\\n                <option *ngFor=\\\"let option of availableOptions\\\" [ngValue]=\\\"option\\\">{{option}}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-6 col-xs-12\\\">\\n            <label for=\\\"chain\\\">Chain: Bitcoin</label>\\n            <span *ngIf=\\\"chain == 'btc/livenet'\\\">livenet</span>\\n            <span *ngIf=\\\"chain == 'btc/testnet'\\\">testnet</span>\\n            <span *ngIf=\\\"chain == 'bch/livenet'\\\">Cash livenet</span>\\n            <span *ngIf=\\\"chain == 'bch/testnet'\\\">Cash testnet</span>\\n            <span *ngIf=\\\"chain == 'bsv/livenet'\\\">Satoshi livenet</span>\\n            <div class=\\\"chain-select\\\">\\n              <select class=\\\"form-control\\\" id=\\\"chain\\\" name=\\\"chain\\\" [(ngModel)]=\\\"chain\\\">\\n                <option *ngFor=\\\"let chain of availableChains\\\" [ngValue]=\\\"chain\\\">{{chain}}</option>\\n              </select>\\n              <div class=\\\"chain-logo-container\\\">\\n                <img src=\\\"assets/img/icon-btc.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'btc/livenet'\\\">\\n                <img src=\\\"assets/img/icon-testnet.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'btc/testnet' || chain == 'bch/testnet'\\\">\\n                <img src=\\\"assets/img/icon-bch.svg\\\" class=\\\"chain-logo\\\" *ngIf=\\\"chain == 'bch/livenet'\\\">\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-3 col-xs-12\\\">\\n            <label for=\\\"addressGap\\\">Address Gap*</label>\\n            <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"addressGap\\\" name=\\\"addressGap\\\" [(ngModel)]=\\\"addressGap\\\" required>\\n          </div>\\n          <div class=\\\"form-group col-sm-3 col-xs-12\\\">\\n            <label for=\\\"account\\\">Account*</label>\\n            <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"account\\\" name=\\\"account\\\" [(ngModel)]=\\\"account\\\" required>\\n          </div>\\n          <div class=\\\"col-sm-6 offset-sm-6 col-xs-12\\\">\\n            <small>*Usually does not need to be changed</small>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card\\\" *ngFor=\\\"let copayer of copayers\\\">\\n      <div class=\\\"card-block\\\">\\n        <h6 class=\\\"card-title\\\">Backup for copayer {{copayer}}:</h6>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-sm-6\\\">\\n            <label for=\\\"dataBackUp\\\">Recovery phrase (mnemonic) or File/Text backup</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dataBackUp-{{copayer}}\\\" name=\\\"dataBackUp-{{copayer}}\\\" [(ngModel)]=\\\"data.backUp[copayer]\\\" autocomplete=\\\"off\\\">\\n          </div>\\n\\n          <div class=\\\"form-group col-sm-6\\\">\\n            <label for=\\\"contentFile\\\">Or upload a File/Text backup:</label>\\n            <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"contentFile\\\" name=\\\"contentFile\\\" accept=\\\".json, .txt\\\" aria-describedby=\\\"contentFileHelp\\\" (change)=\\\"fileChangeEvent($event, copayer)\\\">\\n            <small id=\\\"fileHelp\\\" class=\\\"form-text text-muted\\\">Extensions accepted: .json and .txt</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dataPass\\\">Backup password:</label><small> (in case you have one)</small>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"dataPass-{{copayer}}\\\" name=\\\"dataPass-{{copayer}}\\\" [(ngModel)]=\\\"data.pass[copayer]\\\" autocomplete=\\\"off\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dataPassX\\\">Encrypted private key password</label><small> (encrypt password)</small>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"dataPassX-{{copayer}}\\\" name=\\\"dataPassX-{{copayer}}\\\" [(ngModel)]=\\\"data.passX[copayer]\\\" autocomplete=\\\"off\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"termsAccepted\\\" name=\\\"termsAccepted\\\">\\n        I have read and accept <a href=\\\"https://copay.io/disclaimer\\\" target=\\\"_blank\\\">Terms and Conditions</a>\\n      </label>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!processInputsForm.form.valid  || showLoadingSpinner || !termsAccepted\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">\\n      <span *ngIf=\\\"chain == 'btc/livenet' || chain == 'btc/testnet'\\\">Scan BTC Wallet</span>\\n      <span *ngIf=\\\"chain == 'bch/livenet' || chain == 'bch/testnet'\\\">Scan BCH Wallet</span>\\n      <span *ngIf=\\\"chain == 'bsv/livenet'\\\">Scan BSV Wallet</span>\\n    </button>\\n  </form>\\n\\n  <form #sendFundsForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendFunds(destinationAddress, chain)\\\" *ngIf=\\\"!beforeScan && !done\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block\\\">\\n        <h6 class=\\\"card-title\\\">{{totalBalanceStr}}</h6>\\n        <div class=\\\"input-group\\\" *ngIf=\\\"!insufficentsFunds\\\">\\n          <div class=\\\"input-group-addon\\\">Destination Address:</div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"destinationAddress\\\" name=\\\"destinationAddress\\\" [(ngModel)]=\\\"destinationAddress\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" *ngIf=\\\"!insufficentsFunds\\\" [disabled]=\\\"!sendFundsForm.form.valid || showLoadingSpinner\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Transfer</button>\\n  </form>\\n\\n  <button type=\\\"button\\\" (click)=\\\"viewOnBlockchain()\\\" *ngIf=\\\"broadcasted\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\">View on blockchain</button>\\n  <button type=\\\"button\\\" (click)=\\\"ngOnInit()\\\" *ngIf=\\\"!beforeScan\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\">Go\\n    back</button>\\n\\n  <div [hidden]=\\\"!showLoadingSpinner\\\">\\n    <div class=\\\"s1\\\">\\n      <div class=\\\"s b sb1\\\"></div>\\n      <div class=\\\"s b sb2\\\"></div>\\n      <div class=\\\"s b sb3\\\"></div>\\n      <div class=\\\"s b sb4\\\"></div>\\n    </div>\\n    <div class=\\\"s2\\\">\\n      <div class=\\\"s b sb5\\\"></div>\\n      <div class=\\\"s b sb6\\\"></div>\\n      <div class=\\\"s b sb7\\\"></div>\\n      <div class=\\\"s b sb8\\\"></div>\\n    </div>\\n    <div class=\\\"bigcon\\\">\\n      <div class=\\\"big b\\\"></div>\\n    </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ematiu/dev/copay-recovery/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ematiu/dev/copay-recovery/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { RecoveryService } from '../app/services/recovery.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [RecoveryService]\n})\n\nexport class AppComponent implements OnInit {\n  public availableOptions: Array<any>;\n  public availableChains: Array<any>;\n  public signaturesNumber: number; // m\n  public copayersNumber: number; // n\n  public chain: string;\n  public network: string;\n  public coin: string;\n  public addressGap: number;\n  public account: number;\n  public beforeScan: boolean;\n  public copayers = [1];\n  public data: any;\n  public termsAccepted: boolean;\n  public statusMessage: string;\n  public successMessage: string;\n  public errorMessage: string;\n  public totalBalanceStr: string;\n  public totalBalance: number;\n  public destinationAddress: string;\n  public showLoadingSpinner: boolean;\n  public done: boolean;\n  public broadcasted: boolean;\n  public insufficentsFunds: boolean;\n\n  public reportAmount: string;\n  public reportInactive: string;\n  public reportAddresses: string;\n\n  private wallet: any;\n  private scanResults: any;\n  private fee: number;\n  private txid: string;\n\n  constructor(\n    private recoveryService: RecoveryService\n  ) {\n    this.addressGap = 20;\n    this.account = 0;\n    this.data = {\n      backUp: [],\n      pass: [],\n      passX: [],\n      gap: this.addressGap\n    };\n    this.availableOptions = [1, 2, 3, 4, 5, 6];\n    this.availableChains = ['btc/livenet', 'btc/testnet', 'bch/livenet', 'bch/testnet', 'bsv/livenet'];\n    this.fee = 0.001;\n    this.signaturesNumber = this.availableOptions[0];\n    this.copayersNumber = this.availableOptions[0];\n    this.chain = this.availableChains[0];\n    this.statusMessage = null;\n    this.successMessage = null;\n    this.errorMessage = null;\n    this.done = false;\n    this.broadcasted = false;\n    this.insufficentsFunds = false;\n    this.termsAccepted = false;\n  }\n\n  ngOnInit() {\n    this.hideMessage();\n    this.beforeScan = true;\n    this.done = false;\n    this.broadcasted = false;\n    this.insufficentsFunds = false;\n    this.destinationAddress = '';\n    this.txid = null;\n    this.checkAngularCryptoConfig();\n    this.recoveryService.activeAddrCoinType = '';\n    this.showLoadingSpinner = false;\n    this.recoveryService.stopSearching = true;\n  }\n\n  private checkAngularCryptoConfig(): void {\n    const result = this.recoveryService.checkAngularCryptoConfig();\n    if (result) {\n      this.showMessage(result, 3);\n    }\n  }\n\n  public updateCopayersForm(): void {\n    this.copayers = _.map(_.range(1, this.copayersNumber + 1), (i) => {\n      return i;\n    });\n  }\n\n  public processInputs(): void {\n    this.hideMessage();\n    this.showLoadingSpinner = true;\n    this.beforeScan = true;\n    this.recoveryService.stopSearching = false;\n\n    const inputs = _.map(_.range(1, this.copayersNumber + 1), (i) => {\n      return {\n        backup: this.data.backUp[i] || '',\n        password: this.data.pass[i] || '',\n        xPrivPass: this.data.passX[i] || '',\n      };\n    });\n\n    if (this.chain.match(/bch/)) {\n      this.network = this.chain.replace('bch/', '');\n      this.coin = 'bch';\n      this.fee = 0.0001;\n    } else if (this.chain.match(/bsv/)) {\n      this.network = this.chain.replace('bsv/', '');\n      this.coin = 'bsv';\n      this.fee = 0.0001;\n    } else {\n      this.network = this.chain.replace('btc/', '');\n      this.coin = 'btc';\n      this.fee = 0.001;\n    }\n\n    try {\n      this.wallet = this.recoveryService.getWallet(inputs, this.signaturesNumber, this.copayersNumber, this.coin, this.network);\n    } catch (ex) {\n      this.showLoadingSpinner = false;\n      return this.showMessage(ex.message, 3);\n    }\n    this.showMessage('Scanning funds...', 1);\n\n    const reportFn = (currentGap, activeAddresses) => {\n      let balance;\n      if (this.coin === 'bsv') {\n        // Use OLD Insight\n        balance = _.sumBy(_.flatten(_.map(activeAddresses, 'utxo')), 'amount');\n      } else {\n        balance = _.sumBy(activeAddresses, 'balance');\n      }\n      const balStr = balance.toFixed(8) + ' ';\n      this.reportInactive = currentGap;\n      this.reportAmount = balStr + ' ' + this.wallet.coin.toUpperCase();\n      this.reportAddresses = activeAddresses.length;\n    };\n\n    let gap = +this.addressGap;\n    gap = gap ? gap : 20;\n\n    this.recoveryService.scanWallet(this.wallet, this.coin, gap, this.account, reportFn, (err, res) => {\n      if (err) {\n        const error = err.message ? err.message : err;\n        return this.showMessage(error, 3);\n      }\n\n      this.scanResults = res;\n      console.log('## Total balance:', this.scanResults.balance.toFixed(8) + ' ' + this.wallet.coin.toUpperCase());\n\n      if (!this.recoveryService.stopSearching) {\n        this.showMessage('Search completed', 2);\n        this.showLoadingSpinner = false;\n        this.beforeScan = false;\n        this.totalBalance = this.scanResults.balance.toFixed(8);\n        this.totalBalanceStr = 'Available balance: ' + this.scanResults.balance.toFixed(8) + ' ' + this.wallet.coin.toUpperCase();\n        if ((this.scanResults.balance - this.fee) <= 0) {\n          if (this.scanResults.balance > 0) {\n            this.totalBalanceStr += '. Insufficient funds.';\n          }\n          this.insufficentsFunds = true;\n        }\n      }\n    });\n  }\n\n  public fileChangeEvent($event, index: number): void {\n    this.readThis($event.target, index);\n  }\n\n  private readThis(inputValue: any, index: number): void {\n    const file: File = inputValue.files[0];\n    const myReader: FileReader = new FileReader();\n\n    myReader.readAsText(file);\n    myReader.onloadend = (e) => {\n      this.data.backUp[index] = myReader.result;\n    };\n  }\n\n  public sendFunds(destinationAddress: string, chain: string): void {\n    // tslint:disable-next-line:max-line-length\n    const confirmMessage = 'A total of ' + this.totalBalance + ' will be send to: \\n\\nDestination address: ' + destinationAddress + '\\nChain: ' + (chain.substring(0, 3)).toUpperCase();\n    if (!confirm(confirmMessage)) {\n      return;\n    }\n\n    let rawTx;\n\n    this.showLoadingSpinner = true;\n\n    try {\n      rawTx = this.recoveryService.createRawTx(destinationAddress, this.scanResults, this.wallet, this.fee);\n    } catch (ex) {\n      return this.showMessage(ex.message, 3);\n    }\n    this.done = true;\n\n    this.recoveryService.txBroadcast(rawTx, this.coin, this.network).subscribe((response: any) => {\n      this.txid = this.coin === 'bsv' ? response.data.transaction_hash : response.txid;\n      const message = (this.scanResults.balance - this.fee).toFixed(8) + ' ' + this.wallet.coin.toUpperCase() + ' sent to address: '\n        + destinationAddress + '. Transaction ID:' + this.txid;\n      this.showMessage(message, 2);\n      this.broadcasted = true;\n      console.log('Transaction complete. ' + (this.scanResults.balance - this.fee) + ' TX sent to address: ' + destinationAddress);\n      console.log('Transaction id: ', this.txid);\n    }, () => {\n      this.showMessage('Could not broadcast transaction. Please, try later. Raw Tx:' + rawTx, 3);\n    });\n  }\n\n  public viewOnBlockchain(): void {\n    let url: string;\n\n    switch (this.chain) {\n      case 'btc/livenet':\n        url = 'https://insight.bitcore.io/#/BTC/mainnet/tx/';\n        break;\n      case 'btc/testnet':\n        url = 'https://insight.bitcore.io/#/BTC/testnet/tx/';\n        break;\n      case 'bch/livenet':\n        url = 'https://insight.bitcore.io/#/BCH/mainnet/tx/';\n        break;\n      case 'bch/testnet':\n        url = 'https://insight.bitcore.io/#/BCH/testnet/tx/';\n        break;\n      case 'bsv/livenet':\n        url = 'https://bchsvexplorer.com/tx/';\n        break;\n      default:\n        url = 'https://insight.bitcore.io/#/BTC/mainnet/tx/';\n    }\n\n    const win = window.open(url + this.txid, '_blank');\n    win.focus();\n  }\n\n  private hideMessage(): void {\n    this.statusMessage = null;\n    this.successMessage = null;\n    this.errorMessage = null;\n  }\n\n  public showMessage(message: string, type: number): void {\n    /*\n      1 = status\n      2 = success\n      3 = error\n    */\n\n    if (type === 1) {\n      this.statusMessage = message;\n      this.successMessage = null;\n      this.errorMessage = null;\n    } else if (type === 2) {\n      this.successMessage = message;\n      this.statusMessage = null;\n      this.errorMessage = null;\n      this.showLoadingSpinner = false;\n    } else if (type === 3) {\n      this.errorMessage = message;\n      this.statusMessage = null;\n      this.successMessage = null;\n      this.showLoadingSpinner = false;\n    }\n    setTimeout(() => {\n      window.scrollTo(0, 1);\n    }, 150);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ematiu/dev/copay-recovery/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ematiu/dev/copay-recovery/src/app/app.module.ts","import {\n  Injectable\n} from '@angular/core';\n\nimport * as sjcl from 'sjcl';\nimport * as bitcoreLib from 'bitcore-lib';\nimport * as bitcoreLibCash from 'bitcore-lib-cash';\nimport * as Mnemonic from 'bitcore-mnemonic';\nimport * as _ from 'lodash';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class RecoveryService {\n  public bitcore: any;\n  public PATHS: Object;\n\n  public apiURI = {\n    'btc/livenet': 'https://api.bitcore.io/api/BTC/mainnet/',\n    'btc/testnet': 'https://api.bitcore.io/api/BTC/testnet/',\n    'bch/livenet': 'https://api.bitcore.io/api/BCH/mainnet/',\n    'bch/testnet': 'https://api.bitcore.io/api/BCH/testnet/',\n    'bsv/livenet': 'https://bchsvexplorer.com/api/',\n  };\n  public activeAddrCoinType = '';\n  public stopSearching = false;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.PATHS = {\n      // we found some broken BIP45 wallet, that have some BIP44 addresses, so:\n      'BIP45': ['m/45\\'/2147483647/0', 'm/45\\'/2147483647/1'],\n      'BIP44': {\n        'btc': {\n          'testnet': [\n            'm/44\\'/1\\'/ACCOUNT\\'/0', 'm/44\\'/1\\'/ACCOUNT\\'/1',\n            'm/48\\'/1\\'/ACCOUNT\\'/0', 'm/48\\'/1\\'/ACCOUNT\\'/1'\n          ],\n          'livenet': [\n            'm/44\\'/0\\'/ACCOUNT\\'/0', 'm/44\\'/0\\'/ACCOUNT\\'/1',\n            'm/48\\'/0\\'/ACCOUNT\\'/0', 'm/48\\'/0\\'/ACCOUNT\\'/1'\n          ],\n        },\n        'bch': {\n          'livenet': [\n            'm/44\\'/145\\'/ACCOUNT\\'/0', 'm/44\\'/145\\'/ACCOUNT\\'/1',\n            'm/48\\'/145\\'/ACCOUNT\\'/0', 'm/48\\'/145\\'/ACCOUNT\\'/1',\n            'm/44\\'/0\\'/ACCOUNT\\'/0', 'm/44\\'/0\\'/ACCOUNT\\'/1'\n          ],\n          'testnet': [\n            'm/44\\'/1\\'/ACCOUNT\\'/0', 'm/44\\'/1\\'/ACCOUNT\\'/1',\n            'm/48\\'/1\\'/ACCOUNT\\'/0', 'm/48\\'/1\\'/ACCOUNT\\'/1'\n          ]\n        },\n        'bsv': {\n          'livenet': [\n            'm/44\\'/0\\'/ACCOUNT\\'/0', 'm/44\\'/0\\'/ACCOUNT\\'/1',\n            'm/44\\'/145\\'/ACCOUNT\\'/0', 'm/44\\'/145\\'/ACCOUNT\\'/1'\n          ]\n        }\n      }\n    };\n  }\n\n  private fromBackup(data: any, m: number, n: number, coin: string, network: string): any {\n    try {\n      JSON.parse(data.backup);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('JSON invalid. Please copy only the text within (and including) the { } brackets around it.');\n    }\n\n    let payload;\n    try {\n      payload = sjcl.decrypt(data.password, data.backup);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Incorrect backup password');\n    }\n\n    payload = JSON.parse(payload);\n\n    // Support for old file formats\n    const credentials = payload.credentials ? payload.credentials : payload;\n    const key = payload.key ? payload.key : payload;\n\n    if (!credentials.n) {\n      // tslint:disable-next-line:max-line-length\n      throw new Error('Backup format not recognized. If you are using a Copay Beta backup and version is older than 0.10, please see: https://github.com/bitpay/copay/issues/4730#issuecomment-244522614');\n    }\n    if ((credentials.m !== m) || (credentials.n !== n)) {\n      throw new Error('The wallet configuration (m-n) does not match with values provided.');\n    }\n\n    if (credentials.network !== network) {\n      throw new Error('Incorrect network.');\n    }\n    if (!(key.xPrivKeyEncrypted) && !(key.xPrivKey)) {\n      throw new Error('The backup does not have a private key');\n    }\n    let xPriv = key.xPrivKey;\n    if (key.xPrivKeyEncrypted) {\n      try {\n        xPriv = sjcl.decrypt(data.xPrivPass, key.xPrivKeyEncrypted);\n      } catch (ex) {\n        console.log(ex);\n        throw new Error('Can not decrypt private key');\n      }\n    }\n    const derivationStrategy = credentials.rootPath ? this.getDerivationStrategy(credentials.rootPath) :\n      (credentials.derivationStrategy ? credentials.derivationStrategy : 'BIP45');\n    const credential = {\n      walletId: credentials.walletId,\n      copayerId: credentials.copayerId,\n      publicKeyRing: credentials.publicKeyRing,\n      xPriv: xPriv,\n      derivationStrategy,\n      addressType: derivationStrategy === 'BIP45' ? 'P2SH' : credentials.addressType,\n      m: m,\n      n: n,\n      network: network,\n      coin: coin,\n      from: 'backup',\n    };\n    return credential;\n  }\n\n  public checkAngularCryptoConfig(): string {\n    const mnemonics = 'imitate type scorpion whip oil cheese achieve rail organ donkey note screen';\n    try {\n      new Mnemonic(mnemonics).toHDPrivateKey('', 'testnet').toString();\n    } catch (ex) {\n      console.log(ex);\n      return 'Before starting, check the angular cli configuration described in the README/Installation section';\n    }\n    return null;\n  }\n\n  private fromMnemonic(data: any, m: number, n: number, coin: string, network: string): any {\n    if (!data.backup) {\n      return null;\n    }\n\n    const words = _.trim(data.backup);\n    const passphrase = data.password;\n    let xPriv;\n\n    try {\n      xPriv = new Mnemonic(words).toHDPrivateKey(passphrase, network).toString();\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Mnemonic wallet seed is not valid.');\n    }\n\n    const credential = {\n      xPriv: xPriv,\n      derivationStrategy: 'BIP44',\n      addressType: n === 1 ? 'P2PKH' : 'P2SH',\n      m: m,\n      n: n,\n      network: network,\n      coin: coin,\n      from: 'mnemonic',\n    };\n    return credential;\n  }\n\n  private buildWallet(credentials: any): any {\n    let result: any;\n    credentials = _.compact(credentials);\n    if (credentials.length === 0) {\n      throw new Error('No data provided');\n    }\n\n    if (_.uniq(_.map(credentials, 'from')).length !== 1) {\n      throw new Error('Mixed backup sources not supported');\n    }\n\n    // tslint:disable-next-line:max-line-length\n    result = _.pick(credentials[0], ['walletId', 'derivationStrategy', 'addressType', 'm', 'n', 'network', 'from', 'coin', 'publicKeyRing']);\n\n    // only for backup files\n    result.copayers = _.map(credentials, (c: any) => {\n      if (c.walletId !== result.walletId) {\n        throw new Error('Backups do not belong to the same wallets.');\n      }\n      return {\n        copayerId: c.copayerId,\n        xPriv: c.xPriv,\n      };\n    });\n    if (result.from === 'backup') {\n      if (_.uniq(_.compact(_.map(result.copayers, 'copayerId'))).length !== result.copayers.length) {\n        throw new Error('Some of the backups belong to the same copayers');\n      }\n    }\n\n    console.log('Recovering wallet', result);\n\n    return result;\n  }\n\n  public getWallet(data: any, m: number, n: number, coin: string, network: string): any {\n    const credentials = _.map(data, (dataItem: any) => {\n      dataItem.backup = _.trim(dataItem.backup);\n      if (dataItem.backup.charAt(0) === '{') {\n        return this.fromBackup(dataItem, m, n, coin, network);\n      } else {\n        return this.fromMnemonic(dataItem, m, n, coin, network);\n      }\n    });\n\n    if (coin === 'btc') {\n      this.bitcore = bitcoreLib;\n    } else if (coin === 'bch' || coin === 'bsv') {\n      this.bitcore = bitcoreLibCash;\n    } else {\n      throw new Error('Unknown coin ' + coin);\n    }\n\n    return this.buildWallet(credentials);\n  }\n\n  public scanWallet(wallet: any, coin: string, inGap: number, account: number, reportFn: Function, cb: Function): any {\n    let utxos: Array<any>;\n    // getting main addresses\n    this.getActiveAddresses(wallet, inGap, account, reportFn, (err, addresses) => {\n      if (err) {\n        return cb(err);\n      }\n      utxos = _.flatten(_.map(addresses, 'utxo'));\n      const result = {\n        addresses: _.uniq(addresses),\n        balance: coin === 'bsv' ? _.sumBy(utxos, 'amount') : _.sumBy(addresses, 'balance'),\n      };\n      return cb(null, result);\n    });\n  }\n\n  private getPaths(wallet: any, account: number): string {\n    if (wallet.derivationStrategy === 'BIP45') {\n      let p = _.clone(this.PATHS[wallet.derivationStrategy]);\n      // adds copayer's paths\n      for (let i = 0; i < wallet.n; i++) {\n        const copayerPaths = ['m/45\\'/' + i + '/0', 'm/45\\'/' + i + '/1'];\n        p = p.concat(copayerPaths);\n      }\n      return p;\n    }\n    if (wallet.derivationStrategy === 'BIP44') {\n      const paths = this.getPathsWithAccount(wallet, account);\n      return paths[wallet.derivationStrategy][wallet.coin][wallet.network];\n    }\n  }\n\n  private getPathsWithAccount(wallet, account: number) {\n    const paths = _.cloneDeep(this.PATHS);\n    paths[wallet.derivationStrategy][wallet.coin][wallet.network].forEach((path, i) => {\n      paths[wallet.derivationStrategy][wallet.coin][wallet.network][i] = path.replace(/ACCOUNT/, `${account}`);\n    });\n    return paths;\n  }\n\n  private getHdDerivations(wallet: any, account: number): any {\n\n    const deriveOne = (xpriv, path, compliant): string => {\n      const hdPrivateKey = this.bitcore.HDPrivateKey(xpriv);\n      const xPrivKey = compliant ? hdPrivateKey.deriveChild(path) : hdPrivateKey.deriveNonCompliantChild(path);\n      return xPrivKey;\n    };\n\n    const expand = (groups) => {\n      if (groups.length === 1) {\n        return groups[0];\n      }\n\n      const combine = (g1, g2) => {\n        const combinations = [];\n        for (let i = 0; i < g1.length; i++) {\n          for (let j = 0; j < g2.length; j++) {\n            combinations.push(_.flatten([g1[i], g2[j]]));\n          }\n        }\n        return combinations;\n      };\n      return combine(groups[0], expand(_.tail(groups)));\n    };\n\n    const xPrivKeys = _.map(wallet.copayers, 'xPriv');\n    let derivations = [];\n    _.each(this.getPaths(wallet, account), (path) => {\n      const derivation = expand(_.map(xPrivKeys, (xpriv, i) => {\n        const compliant = deriveOne(xpriv, path, true);\n        const nonCompliant = deriveOne(xpriv, path, false);\n        const items = [];\n        items.push({\n          copayer: i + 1,\n          path: path,\n          compliant: true,\n          key: compliant\n        });\n        if (compliant.toString() !== nonCompliant.toString()) {\n          items.push({\n            copayer: i + 1,\n            path: path,\n            compliant: false,\n            key: nonCompliant\n          });\n        }\n        return items;\n      }));\n      derivations = derivations.concat(derivation);\n    });\n\n    return derivations;\n  }\n\n  private getActiveAddresses(wallet: any, inGap: number, account: number, reportFn: Function, cb: Function): any {\n    const activeAddress = [];\n    let inactiveCount;\n\n    const baseDerivations = this.getHdDerivations(wallet, account);\n\n    const exploreDerivation = (i): void => {\n\n      if (i >= baseDerivations.length) {\n        return cb(null, _.uniqBy(activeAddress, 'address'));\n      }\n      inactiveCount = 0;\n      derive(baseDerivations[i], 0, (err, addresses) => {\n        if (err) {\n          return cb(err);\n        }\n        exploreDerivation(i + 1);\n      });\n    };\n\n    const derive = (baseDerivation, index, callback) => {\n      if (this.stopSearching) {\n        return callback(null);\n      }\n\n      const path = baseDerivation.path || baseDerivation[0].path;\n      if (inactiveCount > inGap || path.match(this.activeAddrCoinType) === null) {\n        return callback();\n      }\n\n      const address = this.generateAddress(wallet, baseDerivation, index);\n      this.checkAddressData(address, wallet.coin, wallet.network, (err, addressData) => {\n        if (err) {\n          return callback(err);\n        }\n        if (!_.isEmpty(addressData)) {\n          addressData.balance = addressData.balance * 1e-8;\n          console.log('#Active address:', addressData, baseDerivation, wallet.network);\n          if (wallet.derivationStrategy !== 'BIP45') {\n            this.activeAddrCoinType = this.getActiveAddrCoinType(wallet, path);\n          }\n          activeAddress.push(addressData);\n          inactiveCount = 0;\n        } else {\n          inactiveCount++;\n        }\n\n        reportFn(inactiveCount, _.uniqBy(activeAddress, 'address'));\n\n        derive(baseDerivation, index + 1, callback);\n      });\n    };\n\n    exploreDerivation(0);\n  }\n\n  private getActiveAddrCoinType(wallet, path: string): string {\n    // This function avoids searching on another derivation paths when an active address has already been found in one of them\n\n    if (wallet.coin === 'btc' && wallet.network === 'livenet') {\n      return path.match(/m\\/44\\'\\/0\\'/) ? 'm/44\\'/0\\'' : 'm/48\\'/0\\'';\n    } else if (wallet.coin === 'btc' && wallet.network === 'testnet') {\n      return path.match(/m\\/44\\'\\/1\\'/) ? 'm/44\\'/1\\'' : 'm/48\\'/1\\'';\n    } else if (wallet.coin === 'bch' && wallet.network === 'livenet') {\n      return path.match(/m\\/44\\'\\/145\\'/) ? 'm/44\\'/145\\'' :\n        (path.match(/m\\/48\\'\\/145\\'/) ? 'm/48\\'/145\\'' : 'm/44\\'/0\\'');\n    } else if (wallet.coin === 'bch' && wallet.network === 'testnet') {\n      return path.match(/m\\/44\\'\\/1\\'/) ? 'm/44\\'/1\\'' : 'm/48\\'/1\\'';\n    } else {\n      return path;\n    }\n  }\n\n  private generateAddress(wallet: any, derivedItems: any, index: number): any {\n    const derivedPrivateKeys = [];\n    let derivedPublicKeys = [];\n\n    _.each([].concat(derivedItems), (item) => {\n      const hdPrivateKey = this.bitcore.HDPrivateKey(item.key);\n\n      // private key derivation\n      const derivedPrivateKey = hdPrivateKey.deriveChild(index).privateKey;\n      derivedPrivateKeys.push(derivedPrivateKey);\n\n      // public key derivation\n      derivedPublicKeys.push(derivedPrivateKey.publicKey);\n    });\n    if (wallet.publicKeyRing) {\n      let hdPublicKey;\n      const derivedItemsArray = [].concat(derivedItems);\n      const path = derivedItemsArray[0].path.split('/');\n      const isChange = parseInt(_.last(path).toString(), 10);\n      derivedPublicKeys = [];\n      wallet.publicKeyRing.forEach((item) => {\n        if (wallet.derivationStrategy === 'BIP45') {\n          // (sharedId = 2147483647 )\n          const copayerId = parseInt(_.nth(path, -2).toString(), 10);\n          hdPublicKey = new this.bitcore.HDPublicKey(item.xPubKey).deriveChild(copayerId).deriveChild(isChange).deriveChild(index);\n        } else {\n          if (wallet.derivationStrategy === 'BIP44') {\n            hdPublicKey = new this.bitcore.HDPublicKey(item.xPubKey).deriveChild(isChange).deriveChild(index);\n          }\n        }\n        derivedPublicKeys.push(hdPublicKey.publicKey);\n      });\n    }\n\n    let address;\n    if (wallet.addressType === 'P2SH') {\n      address = this.bitcore.Address.createMultisig(derivedPublicKeys, wallet.m, wallet.network);\n    } else if (wallet.addressType === 'P2PKH') {\n      address = this.bitcore.Address.fromPublicKey(derivedPublicKeys[0], wallet.network);\n    } else {\n      throw new Error('Address type not supported');\n    }\n    return {\n      addressObject: address,\n      pubKeys: derivedPublicKeys,\n      privKeys: derivedPrivateKeys,\n      info: derivedItems,\n      index: index,\n    };\n  }\n\n  private checkAddressData(address: any, coin: string, network: string, cb: Function) {\n    if (coin === 'bsv') {\n      this.getAddressDataBsv(address, coin, network, cb);\n    } else {\n      this.checkAddress(address, coin, network, cb);\n    }\n  }\n\n  private getBsvAddressFromLegacy(address: string): string {\n    const obj = bitcoreLib.Address(address).toObject();\n    return this.bitcore.Address.fromObject(obj).toString(true);\n  }\n\n  private getAddressDataBsv(address: any, coin: string, network: string, cb: Function): any {\n    // call insight API to get address information\n    this.checkAddressBsv(address.addressObject, coin, network).then((respAddressObs: any) => {\n\n      respAddressObs.subscribe(respAddress => {\n        // call insight API to get utxo information\n        this.getAddressTxos(address.addressObject.toCashAddress(), coin, network).subscribe((respUtxoData: any) => {\n\n          // Old insight returns address in Legacy format\n          const addr = this.getBsvAddressFromLegacy(respAddress.addrStr);\n\n          const cashFormatUtxo = [];\n          respUtxoData.forEach((utxo) => {\n            utxo.address = this.getBsvAddressFromLegacy(utxo.address);\n            cashFormatUtxo.push(utxo);\n          });\n\n          const addressData = {\n            address: addr,\n            balance: respAddress.balance,\n            unconfirmedBalance: respAddress.unconfirmedBalance,\n            utxo: cashFormatUtxo,\n            privKeys: address.privKeys,\n            pubKeys: address.pubKeys,\n            info: address.info,\n            index: address.index,\n            isActive: respAddress.unconfirmedTxApperances + respAddress.txApperances > 0,\n          };\n\n          /* This timeout is because we must not exceed the limit of 30 requests per minute to the server.\n          If you do, you will get an HTTP 429 error */\n          setTimeout(() => {\n            if (addressData.isActive) {\n              return cb(null, addressData);\n            }\n            return cb();\n          }, 1000);\n        });\n      });\n    });\n  }\n\n  private checkAddressBsv(address: any, coin: string, network: string): Promise<any> {\n    const addr = address.toString();\n    const url = this.apiURI[coin + '/' + network] + 'addr/' + addr + '?noTxList=1';\n    return new Promise(resolve => {\n      resolve(this.http.get(url));\n    });\n  }\n\n  private checkAddress(address: any, coin: string, network: string, cb: Function): any {\n    const addr = address.addressObject.toString(true);\n\n    this.getAddressTxos(addr, coin, network).subscribe((txos) => {\n      const utxos = _.filter(txos, ['spentHeight', -2]);\n      const addressData = {\n        address: addr,\n        balance: _.sumBy(utxos, 'value'),\n        utxo: utxos,\n        privKeys: address.privKeys,\n        pubKeys: address.pubKeys,\n        info: address.info,\n        index: address.index,\n        isActive: txos.length > 0,\n      };\n\n      /* This timeout is because we must not exceed the limit of 30 requests per minute to the server.\n      If you do, you will get an HTTP 429 error */\n      setTimeout(() => {\n        if (addressData.isActive) {\n          return cb(null, addressData);\n        }\n        return cb();\n      }, 1000);\n    }, err => {\n      return cb(err);\n    });\n  }\n\n  private getAddressTxos(addr: string, coin: string, network: string): Observable<any> {\n    let url;\n    if (coin === 'bsv') {\n      url = this.apiURI[coin + '/' + network] + 'addr/' + addr + '/utxo?noCache=1';\n    } else {\n      url = this.apiURI[coin + '/' + network] + 'address/' + addr + '/?limit=999';\n    }\n    return this.http.get<any>(url).catch(err => {\n      throw err;\n    });\n  }\n\n  public createRawTx(toAddress: string, scanResults: any, wallet: any, fee: number): any {\n    if (!toAddress || !this.bitcore.Address.isValid(toAddress)) {\n      throw new Error('Please enter a valid address.');\n    }\n\n    const amount = parseInt((scanResults.balance * 1e8 - fee * 1e8).toFixed(0), 10);\n    if (amount <= 0) {\n      throw new Error('Funds are insufficient to complete the transaction');\n    }\n\n    console.log('Generating a ' + wallet.coin + ' transaction');\n\n    try {\n      const checkAddress = new this.bitcore.Address(toAddress, wallet.network);\n      console.log('Check address: ', checkAddress);\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Incorrect destination address network');\n    }\n\n    try {\n      let privKeys = [];\n\n      const tx = new this.bitcore.Transaction();\n\n      _.each(scanResults.addresses, (address: any) => {\n        if (address.utxo.length > 0) {\n          _.each(address.utxo, (u) => {\n            if (wallet.coin !== 'bsv') {\n              u.txid = u.mintTxid;\n              u.outputIndex = u.mintIndex;\n              u.satoshis = u.value;\n            }\n            if (wallet.addressType === 'P2SH') {\n              tx.from(u, address.pubKeys, wallet.m);\n            } else {\n              tx.from(u);\n            }\n            privKeys = privKeys.concat(address.privKeys.slice(0, wallet.m));\n          });\n        }\n      });\n\n      tx.to(toAddress, amount);\n      tx.sign(_.uniq(privKeys));\n      const rawTx = tx.serialize();\n      console.log('Raw transaction: ', rawTx);\n      return rawTx;\n    } catch (ex) {\n      console.log(ex);\n      throw new Error('Could not build tx: ' + ex);\n    }\n  }\n\n  public txBroadcast(rawTx: string, coin: string, network: string): Observable<any> {\n    let url, data;\n    if (coin === 'bsv') {\n      url = 'https://api.blockchair.com/bitcoin-sv/push/transaction';\n      data = { data: rawTx };\n    } else {\n      url = this.apiURI[coin + '/' + network] + 'tx/send';\n      data = { rawTx: rawTx };\n    }\n    console.log('Posting tx to...' + url);\n    return this.http.post<any>(url, data).catch(err => {\n      throw err;\n    });\n  }\n\n  private parsePath(path: string) {\n    return {\n      purpose: path.split('/')[1],\n      coinCode: path.split('/')[2],\n      account: path.split('/')[3]\n    };\n  }\n\n  private getDerivationStrategy(path: string): string {\n    const purpose = this.parsePath(path).purpose;\n    let derivationStrategy: string;\n\n    switch (purpose) {\n      case '45\\'':\n        derivationStrategy = 'BIP45';\n        break;\n      default:\n        derivationStrategy = 'BIP44';\n        break;\n    }\n    return derivationStrategy;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ematiu/dev/copay-recovery/src/app/services/recovery.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/ematiu/dev/copay-recovery/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/ematiu/dev/copay-recovery/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 0\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 2\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 3\n// module chunks = 1"],"sourceRoot":"webpack:///"}